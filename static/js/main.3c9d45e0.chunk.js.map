{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toLocaleTimeString","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","slice","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAQ,IAAIC,KAElB,EAAKK,SAAS,CAAEN,UAEhBO,QAAQC,KAAKR,EAAMS,wBAClB,OAdP,gCAiBE,SAAmBC,GACjB,IAAQC,EAAcR,KAAKS,MAAnBD,UAEJA,IAAcD,EAAUC,WAE1BJ,QAAQM,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDA,MAtB9D,kCA0BE,WACEG,cAAcX,KAAKD,WA3BvB,oBA8BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAW,EAAcR,KAAKS,MAAnBD,UAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGf,EAAMS,8BA3CjB,GAA2BO,a,MCL3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAQX,IAAMI,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVZ,UAAW,WAHf,EAMET,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBsB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEiB,UAAU,OAG5BpB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEK,UAAWM,QAC1B,QApBP,kCAuBE,WACEH,cAAcX,KAAKD,WAxBvB,oBA2BE,WACE,MAAgCC,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUZ,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOZ,UAAWA,WAlCvC,GAAyBK,aCbzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.3c9d45e0.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const today = new Date();\n\n      this.setState({ today });\n      // eslint-disable-next-line\n      console.info(today.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { clockName } = this.props;\n\n    if (clockName !== prevProps.clockName) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevProps.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}